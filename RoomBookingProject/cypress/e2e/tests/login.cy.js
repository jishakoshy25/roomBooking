import loginPage from "../pages/loginPage"
describe('Login', () => {
    it('Successful Login', () => {
        cy.intercept('POST', '/api/auth/login').as('performlogin')
        cy.intercept('GET', '/api/room').as('getRooms')
        cy.visit('https://automationintesting.online/admin')
        loginPage.enterUsername('admin')
        loginPage.enterPassword('password')
        loginPage.loginClick()
        cy.wait('@performlogin').then(({ response }) => {
            expect(response.statusCode).to.eq(200)
            cy.log(response.body)
            expect(response.body).to.have.property('token')
        })
        cy.wait('@getRooms').then(({ request, response }) => {
            cy.log(request.body)
            cy.log(response.body)
            expect(response.statusCode).to.eq(200)
            expect(response.body).to.have.property('rooms')
            expect(response.body.rooms).to.have.length.greaterThan(0)
            expect(response.body.rooms[0]).to.have.property('roomid')
            expect(response.body.rooms[0]).to.have.property('roomName')
            expect(response.body.rooms[0]).to.have.property('type')
        })
        cy.url().should('include', '/rooms')
        cy.contains('Restful Booker Platform Demo')
    })
    it('Login failure', () => {
        cy.intercept('POST', '/api/auth/login').as('performlogin')
        cy.visit('https://automationintesting.online/admin')
        loginPage.enterUsername('admin')
        loginPage.enterPassword('password123')
        loginPage.loginClick()
        cy.wait('@performlogin').then(({ response }) => {
            expect(response.statusCode).to.eq(401)
            cy.log(response.body)
            expect(response.body).to.not.have.property('token')
        })
        cy.url().should('include', '/admin')
        loginPage.elements.alertInvalid().should('be.visible')
        loginPage.elements.alertInvalid().should('have.text', 'Invalid credentials')
        cy.contains('Restful Booker Platform Demo')
    })
    it('Create Room', () => {
        cy.intercept('POST', '/api/room').as('createRoom')
        cy.visit('https://automationintesting.online/admin')
        loginPage.enterUsername('admin')
        loginPage.enterPassword('password')
        loginPage.loginClick()
        cy.url().should('include', '/rooms')
        cy.contains('Restful Booker Platform Demo')
        cy.get('input#roomName').type('301')
        cy.get('select#type').select('Single')
        cy.get('select#accessible').select('true')
        cy.get('input#roomPrice').type('140')
        cy.get('input#wifiCheckbox').click()
        cy.get('button#createRoom').click()
        cy.wait('@createRoom').then(({ request, response }) => {
            expect(response.statusCode).to.eq(200)
            cy.log(response.body)
            expect(response.body).to.have.property('success')

        })
    })
    it('Update Room Details', () => {
        cy.intercept('PUT', '/api/room/*').as('updateRoom')
        cy.intercept('GET', '/api/room/*').as('getRoom')
        cy.visit('https://automationintesting.online/admin')
        loginPage.enterUsername('admin')
        loginPage.enterPassword('password')
        loginPage.loginClick()
        cy.url().should('include', '/rooms')
        cy.contains('Restful Booker Platform Demo')
        cy.get('p#roomName301').eq(0).click()
        cy.url().should('include', '/room/')
        cy.contains('button', 'Edit').click()
        cy.get('#roomPrice').clear().type('160')
        cy.get('textarea#description').clear().type('added new description')
        cy.get('#update').click()
        cy.wait('@updateRoom').then(({ response }) => {
            expect(response.statusCode).to.eq(200)
            cy.log(response.body)
            expect(response.body).to.have.property('success')
        })
        cy.wait('@getRoom').then(({response})=>{
             expect(response.statusCode).to.eq(200)
            cy.log(response.body)
            expect(response.body).to.have.property('roomName','301')
            expect(response.body).to.have.property('roomid')
        })
    })
     it('Delete room', () => {
        cy.intercept('DELETE', '/api/room/*').as('deleteRoom')
        cy.visit('https://automationintesting.online/admin')
        loginPage.enterUsername('admin')
        loginPage.enterPassword('password')
        loginPage.loginClick()
        cy.url().should('include', '/rooms')
        cy.contains('Restful Booker Platform Demo')
        cy.get('div span.fa-remove').last().click()
        cy.wait('@deleteRoom').then(({ response }) => {
            expect(response.statusCode).to.eq(200)
            cy.log(response.body)
            cy.get('p#roomName301').should('not.exist')
        })

    })
}
)